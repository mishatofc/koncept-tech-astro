---
import Footer from "../components/Footer.astro";
import Navbar from "../components/Navbar.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Audiowide&family=IBM+Plex+Mono:wght@400;500;700&display=swap'
      rel='stylesheet'
    />
    <meta
      name='og:description'
      content='
    Koncept-Tech, a leading software development company based in Dhaka, Bangladesh.
    Specializing in custom software, web applications, and AI-based solutions. Our innovative approach and commitment to excellence set us apart as we work towards transforming the future of technology.'
    />
    <meta property='og:title' content='Koncept-Tech' />
    <meta
      property='og:image'
      content='https://i.ibb.co/S52y3N6/339128683-786498519484309-3274192227020146181-n.png'
    />

    <title>{title}</title>
  </head>
  <body onload='preloaderOff()'>
    <div class='preloader'>
      <div class='preloader-spin'></div>
    </div>

    <Navbar />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  html {
    @apply font-ibmPlex bg-[#070707] text-white;
    scroll-behavior: smooth;
  }
  /* body {
    background-image: linear-gradient(
        rgba(34, 37, 37, 0.467) 0.1em,
        transparent 0.1em
      ),
      linear-gradient(90deg, rgba(34, 37, 37, 0.467) 0.1em, transparent 0.1em);
    background-size: 2em 2em;
  } */
  body {
    background-image: url(/body-bg.jpg);
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
    background-position: center;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }
  .wrapper {
    @apply mx-28;
  }
  .firstHorizontalWrapper {
    @apply mx-auto pt-20 px-6 md:max-w-[50rem] lg:max-w-[60rem] xl:max-w-[80rem] 2xl:max-w-[90rem];
  }
  .horizontalWrapper {
    @apply mx-auto px-6 md:max-w-[50rem] lg:max-w-[60rem] xl:max-w-[80rem] 2xl:max-w-[90rem];
  }

  .btn {
    
    @apply active:shadow-none transition-all duration-200 ease-out;
  }

  button:hover {
    @apply duration-150 transition-all;
  }
  .button:active {
    @apply duration-150 transition-all;
  }
  .button:hover .img1 {
    @apply -translate-y-[200%];
  }
  .button:hover .img2 {
    @apply -translate-y-[0%];
  }
  main {
  }
  .img-gradient {
    position: relative;
  }

  .img-gradient::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(360deg, #070707 0%, rgba(0, 0, 0, 0) 46.52%);
  }

  .preloader {
    position: fixed;
    display: flex;
    align-items: center;
    place-content: center;
    width: 100vw;
    height: 100vh;
    z-index: 1000;
    background-color: #070707;
  }

  .preloader-spin {
    width: 50px;
    height: 50px;
    border: 5px solid #d7d7d7;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    100% {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  let preloader = document.querySelector(".preloader");
  window.addEventListener("load", function () {
    preloader.style.display = "none";
  });

  const letters = "abcdefghijklmnopqrstuvwxyz"
  const glitch = (event) => {
    let iteration = 0;      
    let maxIter = (event.target.dataset.value.length > 30) ? 30 : event.target.dataset.value.length;
    const interval = setInterval(() => {
      event.target.innerText = event.target.innerText.split("")
      .map ((letter, index) => {
        if (index < iteration) {
          return event.target.dataset.value[index]
        }
        
        return letters[Math.floor( Math.random() * 26)]
      }) 
      .join("")

      if (iteration >= maxIter) {
        clearInterval(interval)
        event.target.innerText = event.target.dataset.value
      }
      iteration += 1 / 3
    }, 10)
  }

  document.querySelectorAll("h1, h2, a, span").forEach( element => {
    element.onmouseover = event => {
      if (event.target.dataset.value) glitch(event)
    }
  })



</script>
